// Generated by Dagger (https://dagger.dev).
package com.willbsp.habits.ui.screens.add;

import com.willbsp.habits.domain.usecase.SaveHabitUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddHabitViewModel_Factory implements Factory<AddHabitViewModel> {
  private final Provider<SaveHabitUseCase> saveHabitUseCaseProvider;

  public AddHabitViewModel_Factory(Provider<SaveHabitUseCase> saveHabitUseCaseProvider) {
    this.saveHabitUseCaseProvider = saveHabitUseCaseProvider;
  }

  @Override
  public AddHabitViewModel get() {
    return newInstance(saveHabitUseCaseProvider.get());
  }

  public static AddHabitViewModel_Factory create(
      Provider<SaveHabitUseCase> saveHabitUseCaseProvider) {
    return new AddHabitViewModel_Factory(saveHabitUseCaseProvider);
  }

  public static AddHabitViewModel newInstance(SaveHabitUseCase saveHabitUseCase) {
    return new AddHabitViewModel(saveHabitUseCase);
  }
}
