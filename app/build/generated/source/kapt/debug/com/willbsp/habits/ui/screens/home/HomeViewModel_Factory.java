// Generated by Dagger (https://dagger.dev).
package com.willbsp.habits.ui.screens.home;

import com.willbsp.habits.data.repository.EntryRepository;
import com.willbsp.habits.data.repository.HabitWithEntriesRepository;
import com.willbsp.habits.data.repository.SettingsRepository;
import com.willbsp.habits.domain.usecase.CalculateStreakUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import java.time.Clock;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<EntryRepository> entryRepositoryProvider;

  private final Provider<CalculateStreakUseCase> calculateStreakProvider;

  private final Provider<Clock> clockProvider;

  private final Provider<HabitWithEntriesRepository> habitRepositoryProvider;

  private final Provider<SettingsRepository> settingsRepositoryProvider;

  public HomeViewModel_Factory(Provider<EntryRepository> entryRepositoryProvider,
      Provider<CalculateStreakUseCase> calculateStreakProvider, Provider<Clock> clockProvider,
      Provider<HabitWithEntriesRepository> habitRepositoryProvider,
      Provider<SettingsRepository> settingsRepositoryProvider) {
    this.entryRepositoryProvider = entryRepositoryProvider;
    this.calculateStreakProvider = calculateStreakProvider;
    this.clockProvider = clockProvider;
    this.habitRepositoryProvider = habitRepositoryProvider;
    this.settingsRepositoryProvider = settingsRepositoryProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(entryRepositoryProvider.get(), calculateStreakProvider.get(), clockProvider.get(), habitRepositoryProvider.get(), settingsRepositoryProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<EntryRepository> entryRepositoryProvider,
      Provider<CalculateStreakUseCase> calculateStreakProvider, Provider<Clock> clockProvider,
      Provider<HabitWithEntriesRepository> habitRepositoryProvider,
      Provider<SettingsRepository> settingsRepositoryProvider) {
    return new HomeViewModel_Factory(entryRepositoryProvider, calculateStreakProvider, clockProvider, habitRepositoryProvider, settingsRepositoryProvider);
  }

  public static HomeViewModel newInstance(EntryRepository entryRepository,
      CalculateStreakUseCase calculateStreak, Clock clock,
      HabitWithEntriesRepository habitRepository, SettingsRepository settingsRepository) {
    return new HomeViewModel(entryRepository, calculateStreak, clock, habitRepository, settingsRepository);
  }
}
